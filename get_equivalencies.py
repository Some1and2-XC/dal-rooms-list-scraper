#!/usr/bin/python3

# Python file for getting course equivalencies based on data from the `datasets/*` directory generated by `get_locations.py`.

import json
from glob import glob

from main import *

if __name__ == "__main__":

    cookie = input("Enter your browser cookie from `https://self-service.dal.ca/BannerExtensibility/customPage/page/dal.stuweb_academicTimetable`: ")
    cookie = {"JSESSIONID": cookie}

    headers = {
        "Host": "self-service.dal.ca",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:134.0) Gecko/20100101 Firefox/134.0",
        "Referer": "https://self-service.dal.ca/BannerExtensibility/customPage/page/dal.stuweb_academicTimetable",
    }
    # year = 2025

    # url = "https://self-service.dal.ca/BannerExtensibility/internalPb/virtualDomains.dal_facweb_transCredEquiv_vd?MTU=d2hhdF90b19kbw===NzU=T0lfcmVzdWx0X3RhYmxlX21vcmU=&NDI=b2lfcnRfcGFyYTM==MzQ=&NjE=b2lfcnRfcGFyYTI==NjU=MTEyMA==&Nzc=b2Zmc2V0=NDU=MA==&Nzk=b2lfcnRfcGFyYTE==ODI=Q1NDSQ==&OTU=bWF4=NTg=NTAwMA==&encoded=true"
    # url = "https://self-service.dal.ca/BannerExtensibility/internalPb/virtualDomains.dal_facweb_transCredEquiv_vd?MTQ=b2lfcnRfcGFyYTM==Mzg=&MjY=bWF4=ODE=NTAwMA==&MzE=b2Zmc2V0=MTg=MA==&MzU=b2lfcnRfcGFyYTE==OQ==Q1NDSQ==&NzY=d2hhdF90b19kbw===Nw==T0lfcmVzdWx0X3RhYmxlX21vcmU=&OTM=b2lfcnRfcGFyYTI==MTU=MjEwMA==&encoded=true"

    # print(url)
    # print(fuck_ass_url_to_basic_params(url))

    url = "https://self-service.dal.ca/BannerExtensibility/internalPb/virtualDomains.dal_facweb_transCredEquiv_vd"

    # This is the (course_code, number)
    course_codes: list[(str, str)] = []

    for course_code_file in glob("datasets/*.json"):
        with open(course_code_file, "r") as f:
            data = json.loads(f.read())
            for course in data:
                course_codes.append((course["SUBJ_CODE"], course["CRSE_NUMB"]))

    for i in range(len(course_codes)):
        subject = course_codes[i][0]
        course_number = course_codes[i][1]
        filename = f"equivalencies/{subject}-{course_number}.json"
        print(f"Downloading: {filename} | Completed: [{i} / {len(course_codes)}]", end="\r")

        # Don't download if the file already exists
        if os.path.isfile(filename): continue

        payload = {
            b"what_to_do": b"OI_result_table_more",
            b"offset": b"0",
            b"oi_rt_para1": subject,
            b"oi_rt_para2": course_number,
            b"oi_rt_para3": b"",
            b"max": b"5000",
        }
        params = params_to_fuck_ass_url(payload)
        res = requests.get(url, headers=headers, params=params, cookies=cookie)
        data = res.json()

        if len(res.text) == 0:
            print(f"Failed to get data from course: {subject}! Breaking (maybe get a new cookie).")
            print(data)
            break
        if len(data) == 0:
            print(f"\rWARNING: {filename} doesn't have any data!" + " " * 10)
        with open(filename, "w") as f:
            f.write(json.dumps(data, indent=4))

